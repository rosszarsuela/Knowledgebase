<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/util 
			http://www.springframework.org/schema/util/spring-util-3.0.xsd"
			>
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
	
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package-->
	<context:component-scan base-package="com.oris" />
	
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  -->
	<mvc:annotation-driven /> 
	
	<!-- Without the following adapter, we'll get a "Does your handler implement a supported interface like Controller?" in DWR Configuration
	  This is because mvc:annotation-driven element doesn't declare a SimpleControllerHandlerAdapter -->
	 <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	
	 <!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size in bytes (less than 10MB) -->
        <!-- <property name="maxUploadSize" value="10000000" /> -->
        <property name="maxUploadSize" value="100000000" />
    </bean>
	
	<!-- Tiles -->
	<bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
		<property name="order" value="0"/>
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" >
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- MD5 -->
	<bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
	
	<!-- Properties Files Location-->
	<util:list id="propertiesLocation">
		<value>classpath:config.properties</value>
		<value>classpath:messages.properties</value>
		<value>classpath:views.properties</value>
		<value>classpath:email.properties</value>
		<value>classpath:web.properties</value>
	</util:list>

	<!-- Loads properties files from location -->
	<bean id="allProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations" ref="propertiesLocation" />
	</bean>

	<bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="allProperties" />
	</bean>
	
	<bean class="com.oris.util.Config">
		<property name="properties" ref="allProperties" />
	</bean>
</beans>